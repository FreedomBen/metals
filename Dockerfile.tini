FROM docker.io/fedora:31

ENV NGINX_VERSION 1.16
ENV METALS_VERSION 0.3.1

LABEL io.k8s.description="MeTaLS: a drop-in mTLS solution" \
  io.k8s.display-name="MeTaLS v${METALS_VERSION}" \
  io.openshift.tags="tls,mtls,tini" \
  name="MeTaLS" \
  architecture="x86_64" \
  maintainer="github.com/FreedomBen"

# Install dependencies
RUN dnf update -y \
 && dnf install -y \
    nginx \
    wget \
    procps \
    jq \
 && dnf clean all -y

# Install tini
ENV TINI_VERSION v0.18.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
# Currently signature verification is failing.
# Comment out until they get that sorted
#ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /tini.asc
RUN chmod 0555 /tini
# && gpg \
#  --batch \
#  --keyserver hkp://p80.pool.sks-keyservers.net:80 \
#  --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 \
# && gpg --batch --verify /tini.asc /tini

# We need to be able to write the nginx config file
# In OpenShift our user ID will be random and not root,
RUN chmod g+rwx /etc /etc/nginx /etc/nginx/conf.d \
 && mkdir -p /mtls/default-certificates /var/run/ssl \
 && chgrp -R 0 /mtls /var/run/ssl \
 && chmod -R g+rwX /mtls /var/run/ssl \
 && chmod g+rwX /var /var/{log,run}

WORKDIR /mtls
COPY nginx.conf /etc/nginx/nginx.conf
COPY default-certificates/* /mtls/default-certificates/
COPY start.sh /mtls

EXPOSE 8443

ENTRYPOINT ["/tini", "--"]
CMD [ "/mtls/start.sh" ]
